.hamburger{
	padding: 0 !important;
	outline: none !important;
	justify-self: center;
	display: flex;
	@include tablet {
		display: none !important;
	}
}

// apparently you can style hamburgers.js via variables
// in a hamburgers-settings.scss file. refer to docs for specifics
// overriding here just cause
.hamburger-inner,
.hamburger-inner::before,
.hamburger-inner::after,{
	background-color: $hamburger-color !important;
}

//i only exist on desktop
.nav{
    display:none;

    li {
		&:hover a{
			color: $nav-menu-link-color-hover;
		}
	}
	a{
		font-family: $nav-link-font;
		font-weight: $nav-link-weight;
		padding: 8px 8px;
		text-decoration: none;
		display: block;
		margin-right: $nav-link-margin;
		color: $nav-link-color;
		@include desktop{
			padding: 8px 12px;
			font-size: $nav-link-size;		
		}
		font-size: $nav-link-size-sm;		
	}
	@include tablet {
		display:flex;
		ul:first-child{
			display: -webkit-box;
			flex-wrap: wrap;
    		min-width: 40%;
		}
	}
	&__submenu{
		@include tablet{
		pointer-events: none; //slightly hacky workaround to account for menu recursion
		// display: none;
		opacity:0;
		transition: all .2s ease;
		position: absolute;
		flex-direction: $nav-submenu-flex-direction;
		a{
			color: $nav-submenu-link-color !important;
			opacity:.8;
			&:hover{
				opacity: 1;
			}
		}
		background: white;
		// backdrop-filter: $nav-submenu-bg-filter;
		// overflow: visible;
		&.open{
			display: flex;
			opacity: 1;
			pointer-events: auto;
			}
		}
	}
}

//mmenu styles
.nav--mobile{
	display: none;
	&.mm-spn{
		font-family: $nav-link-font;
		font-size: $nav-link-size-mobile;
	}
	&.mm-spn.mm-spn--light{
    	background: $nav-bg-mobile;
    	color: $nav-link-color-mobile;
    }
}